{"ast":null,"code":"import{createGlobalStyle,styled}from\"styled-components\";import{DragDropContext}from\"react-beautiful-dnd\";import{useRecoilState}from\"recoil\";import{toDoState}from\"./atoms\";import Board from\"./components/Board\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const GlobalStyle=createGlobalStyle`\n  * {\n    margin:0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  a { \n    text-decoration: none;\n    color: inherit;\n  }\n\n  body {\n    background: ${props=>props.theme.bgColor};\n    color: #000;\n  }\n`;const Wrapper=styled.main`\n  width: 1200px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;const Boards=styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n`;const App=()=>{const[toDos,setToDos]=useRecoilState(toDoState);const onDragEnd=info=>{console.log(info);// console.log(destination, draggableId, source);\nconst{destination,source}=info;if(!destination)return;if(destination.droppableId===source.droppableId){setToDos(oldToDos=>{const boardCopy=[...oldToDos[source.droppableId]];const taskObj=boardCopy[source.index];boardCopy.splice(source.index,1);boardCopy.splice(destination.index,0,taskObj);return{...oldToDos,[source.droppableId]:boardCopy};});}if(destination.droppableId!==source.droppableId){setToDos(oldToDos=>{const sourceBoard=[...oldToDos[source.droppableId]];const taskObj=sourceBoard[source.index];const destnationBoard=[...oldToDos[destination.droppableId]];sourceBoard.splice(source.index,1);destnationBoard.splice(destination.index,0,taskObj);return{...oldToDos,[source.droppableId]:sourceBoard,[destination.droppableId]:destnationBoard};});}// if (destination?.droppableId === source.droppableId) {\n//   setToDos((oldToDos) => {\n//     const boardCopy = [...oldToDos[source.droppableId]];\n//     boardCopy.splice(source.index, 1);\n//     boardCopy.splice(destination.index, 0, draggableId);\n//     return {\n//       ...oldToDos,\n//       [source.droppableId]: boardCopy,\n//     };\n//   });\n// }\n// if (destination.droppableId !== source.droppableId) {\n//   setToDos((oldToDos) => {\n//     const sourceBoard = [...oldToDos[source.droppableId]];\n//     const destinationBoard = [...oldToDos[destination.droppableId]];\n//     sourceBoard.splice(source.index, 1);\n//     destinationBoard.splice(destination.index, 0, draggableId);\n//     return {\n//       ...oldToDos,\n//       [source.droppableId]: sourceBoard,\n//       [destination?.droppableId]: destinationBoard,\n//     };\n//   });\n// }\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(Wrapper,{children:/*#__PURE__*/_jsx(Boards,{children:Object.keys(toDos).map(boardId=>/*#__PURE__*/_jsx(Board,{toDos:toDos[boardId],boardId:boardId},boardId))})})})]});};export default App;","map":{"version":3,"names":["createGlobalStyle","styled","DragDropContext","useRecoilState","toDoState","Board","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","GlobalStyle","props","theme","bgColor","Wrapper","main","Boards","div","App","toDos","setToDos","onDragEnd","info","console","log","destination","source","droppableId","oldToDos","boardCopy","taskObj","index","splice","sourceBoard","destnationBoard","children","Object","keys","map","boardId"],"sources":["/Users/yerixxz/Documents/code/kdtFrontend/241101/01kanban/src/App.tsx"],"sourcesContent":["import { createGlobalStyle, styled } from \"styled-components\";\nimport { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./components/Board\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin:0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  a { \n    text-decoration: none;\n    color: inherit;\n  }\n\n  body {\n    background: ${(props) => props.theme.bgColor};\n    color: #000;\n  }\n`;\n\nconst Wrapper = styled.main`\n  width: 1200px;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;\n\nconst Boards = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 10px;\n`;\n\nconst App = () => {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = (info: DropResult) => {\n    console.log(info);\n    // console.log(destination, draggableId, source);\n    const { destination, source } = info;\n    if (!destination) return;\n    if (destination.droppableId === source.droppableId) {\n      setToDos((oldToDos) => {\n        const boardCopy = [...oldToDos[source.droppableId]];\n        const taskObj = boardCopy[source.index];\n        boardCopy.splice(source.index, 1);\n        boardCopy.splice(destination.index, 0, taskObj);\n        return {\n          ...oldToDos,\n          [source.droppableId]: boardCopy,\n        };\n      });\n    }\n    if (destination.droppableId !== source.droppableId) {\n      setToDos((oldToDos) => {\n        const sourceBoard = [...oldToDos[source.droppableId]];\n        const taskObj = sourceBoard[source.index];\n        const destnationBoard = [...oldToDos[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destnationBoard.splice(destination.index, 0, taskObj);\n        return {\n          ...oldToDos,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destnationBoard,\n        };\n      });\n    }\n    // if (destination?.droppableId === source.droppableId) {\n    //   setToDos((oldToDos) => {\n    //     const boardCopy = [...oldToDos[source.droppableId]];\n    //     boardCopy.splice(source.index, 1);\n    //     boardCopy.splice(destination.index, 0, draggableId);\n    //     return {\n    //       ...oldToDos,\n    //       [source.droppableId]: boardCopy,\n    //     };\n    //   });\n    // }\n\n    // if (destination.droppableId !== source.droppableId) {\n    //   setToDos((oldToDos) => {\n    //     const sourceBoard = [...oldToDos[source.droppableId]];\n    //     const destinationBoard = [...oldToDos[destination.droppableId]];\n    //     sourceBoard.splice(source.index, 1);\n    //     destinationBoard.splice(destination.index, 0, draggableId);\n    //     return {\n    //       ...oldToDos,\n    //       [source.droppableId]: sourceBoard,\n    //       [destination?.droppableId]: destinationBoard,\n    //     };\n    //   });\n    // }\n  };\n  return (\n    <>\n      <GlobalStyle />\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Wrapper>\n          <Boards>\n            {Object.keys(toDos).map((boardId) => (\n              <Board key={boardId} toDos={toDos[boardId]} boardId={boardId} />\n            ))}\n          </Boards>\n        </Wrapper>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}