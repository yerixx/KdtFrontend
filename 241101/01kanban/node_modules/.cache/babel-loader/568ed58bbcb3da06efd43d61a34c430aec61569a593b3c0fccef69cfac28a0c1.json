{"ast":null,"code":"var _jsxFileName = \"/Users/yerixxz/Documents/code/kdtFrontend/241101/01kanban/src/components/DraggableCard.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n  background: ${props => props.isDragging ? \"tomato\" : props.theme.cardColor};\n  border-radius: 8px;\n  margin-bottom: 5px;\n  padding: 10px;\n  box-shadow: ${props => props.isDragging ? \"0px 2px 5px rgba(0, 0, 0, 0.5)\" : \"none\"};\n`;\n_c = Card;\nconst DraggableCard = ({\n  toDoId,\n  index\n}) => {\n  console.log(toDoId);\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: toDoId,\n    index: index,\n    children: (magic, snapshot) => /*#__PURE__*/_jsxDEV(Card, {\n      isDragging: snapshot.isDragging,\n      ref: magic.innerRef,\n      ...magic.draggableProps,\n      ...magic.dragHandleProps,\n      children: toDoId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, toDoId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DraggableCard;\nexport default _c3 = /*#__PURE__*/React.memo(DraggableCard);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"DraggableCard\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","styled","Draggable","jsxDEV","_jsxDEV","Card","div","props","isDragging","theme","cardColor","_c","DraggableCard","toDoId","index","console","log","draggableId","children","magic","snapshot","ref","innerRef","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","_c2","_c3","memo","$RefreshReg$"],"sources":["/Users/yerixxz/Documents/code/kdtFrontend/241101/01kanban/src/components/DraggableCard.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\ninterface DraggingProps {\n  isDragging: boolean;\n}\n\nconst Card = styled.div<DraggingProps>`\n  background: ${(props) =>\n    props.isDragging ? \"tomato\" : props.theme.cardColor};\n  border-radius: 8px;\n  margin-bottom: 5px;\n  padding: 10px;\n  box-shadow: ${(props) =>\n    props.isDragging ? \"0px 2px 5px rgba(0, 0, 0, 0.5)\" : \"none\"};\n`;\n\ninterface DraggableCardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n}\n\nconst DraggableCard = ({ toDoId, index }: DraggableCardProps) => {\n  console.log(toDoId);\n  return (\n    <Draggable key={toDoId} draggableId={toDoId} index={index}>\n      {(magic, snapshot) => (\n        <Card\n          isDragging={snapshot.isDragging}\n          ref={magic.innerRef}\n          {...magic.draggableProps}\n          {...magic.dragHandleProps}\n        >\n          {toDoId}\n        </Card>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(DraggableCard);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAgB,OAAO;AACnC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhD,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAkB;AACtC,gBAAiBC,KAAK,IAClBA,KAAK,CAACC,UAAU,GAAG,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAACC,SAAS;AACvD;AACA;AACA;AACA,gBAAiBH,KAAK,IAClBA,KAAK,CAACC,UAAU,GAAG,gCAAgC,GAAG,MAAM;AAChE,CAAC;AAACG,EAAA,GARIN,IAAI;AAgBV,MAAMO,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAA0B,CAAC,KAAK;EAC/DC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EACnB,oBACET,OAAA,CAACF,SAAS;IAAce,WAAW,EAAEJ,MAAO;IAACC,KAAK,EAAEA,KAAM;IAAAI,QAAA,EACvDA,CAACC,KAAK,EAAEC,QAAQ,kBACfhB,OAAA,CAACC,IAAI;MACHG,UAAU,EAAEY,QAAQ,CAACZ,UAAW;MAChCa,GAAG,EAAEF,KAAK,CAACG,QAAS;MAAA,GAChBH,KAAK,CAACI,cAAc;MAAA,GACpBJ,KAAK,CAACK,eAAe;MAAAN,QAAA,EAExBL;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACP,GAVaf,MAAM;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWX,CAAC;AAEhB,CAAC;AAACC,GAAA,GAhBIjB,aAAa;AAkBnB,eAAAkB,GAAA,gBAAe9B,KAAK,CAAC+B,IAAI,CAACnB,aAAa,CAAC;AAAC,IAAAD,EAAA,EAAAkB,GAAA,EAAAC,GAAA;AAAAE,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}