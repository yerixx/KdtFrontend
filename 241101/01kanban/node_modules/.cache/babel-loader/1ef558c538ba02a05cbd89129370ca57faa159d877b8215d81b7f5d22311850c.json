{"ast":null,"code":"import React from\"react\";import styled from\"styled-components\";import{Draggable}from\"react-beautiful-dnd\";import{jsx as _jsx}from\"react/jsx-runtime\";const Card=styled.div`\n  background: ${props=>props.isDragging?\"tomato\":props.theme.cardColor};\n  border-radius: 8px;\n  margin-bottom: 5px;\n  padding: 10px;\n  box-shadow: ${props=>props.isDragging?\"0px 2px 5px rgba(0, 0, 0, 0.5)\":\"none\"};\n`;const DraggableCard=_ref=>{let{toDoId,toDoText,index}=_ref;console.log(toDoId);return(/*#__PURE__*/// Draggable은 id 값 필수\n_jsx(Draggable,{draggableId:String(toDoId),index:index,children:(magic,snapshot)=>/*#__PURE__*/_jsx(Card,{isDragging:snapshot.isDragging,ref:magic.innerRef,...magic.draggableProps,...magic.dragHandleProps,children:toDoText})},toDoId));};export default/*#__PURE__*/React.memo(DraggableCard);","map":{"version":3,"names":["React","styled","Draggable","jsx","_jsx","Card","div","props","isDragging","theme","cardColor","DraggableCard","_ref","toDoId","toDoText","index","console","log","draggableId","String","children","magic","snapshot","ref","innerRef","draggableProps","dragHandleProps","memo"],"sources":["/Users/yerixxz/Documents/code/kdtFrontend/241101/01kanban/src/components/DraggableCard.tsx"],"sourcesContent":["import React, { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\ninterface DraggingProps {\n  isDragging: boolean;\n}\n\nconst Card = styled.div<DraggingProps>`\n  background: ${(props) =>\n    props.isDragging ? \"tomato\" : props.theme.cardColor};\n  border-radius: 8px;\n  margin-bottom: 5px;\n  padding: 10px;\n  box-shadow: ${(props) =>\n    props.isDragging ? \"0px 2px 5px rgba(0, 0, 0, 0.5)\" : \"none\"};\n`;\n\ninterface DraggableCardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n}\n\nconst DraggableCard = ({ toDoId, toDoText, index }: DraggableCardProps) => {\n  console.log(toDoId);\n  return (\n    // Draggable은 id 값 필수\n    <Draggable key={toDoId} draggableId={String(toDoId)} index={index}>\n      {(magic, snapshot) => (\n        <Card\n          isDragging={snapshot.isDragging}\n          ref={magic.innerRef}\n          {...magic.draggableProps}\n          {...magic.dragHandleProps}\n        >\n          {toDoText}\n        </Card>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo(DraggableCard);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAgB,OAAO,CACnC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,SAAS,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAMhD,KAAM,CAAAC,IAAI,CAAGJ,MAAM,CAACK,GAAkB;AACtC,gBAAiBC,KAAK,EAClBA,KAAK,CAACC,UAAU,CAAG,QAAQ,CAAGD,KAAK,CAACE,KAAK,CAACC,SAAS;AACvD;AACA;AACA;AACA,gBAAiBH,KAAK,EAClBA,KAAK,CAACC,UAAU,CAAG,gCAAgC,CAAG,MAAM;AAChE,CAAC,CAQD,KAAM,CAAAG,aAAa,CAAGC,IAAA,EAAqD,IAApD,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,KAA0B,CAAC,CAAAH,IAAA,CACpEI,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC,CACnB,oBACE;AACAT,IAAA,CAACF,SAAS,EAAcgB,WAAW,CAAEC,MAAM,CAACN,MAAM,CAAE,CAACE,KAAK,CAAEA,KAAM,CAAAK,QAAA,CAC/DA,CAACC,KAAK,CAAEC,QAAQ,gBACflB,IAAA,CAACC,IAAI,EACHG,UAAU,CAAEc,QAAQ,CAACd,UAAW,CAChCe,GAAG,CAAEF,KAAK,CAACG,QAAS,IAChBH,KAAK,CAACI,cAAc,IACpBJ,KAAK,CAACK,eAAe,CAAAN,QAAA,CAExBN,QAAQ,CACL,CACP,EAVaD,MAWL,CAAC,EAEhB,CAAC,CAED,2BAAeb,KAAK,CAAC2B,IAAI,CAAChB,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}